{"version":3,"sources":["latina.js","components/header/header.component.jsx","components/card-list/card-list.component.jsx","languages.js","components/word-form/word-form.component.jsx","App.js","serviceWorker.js","index.js"],"names":["changes","changed","geminate","string","c","l","environment","RegExp","test","replace","console","log","nasalAssimilation","match","stress","consonant","replacement","preceedingYodPalatalization","result","IPAify","p1","mora","moras","length","includes","concat","push","name","word","description","hLoss","denasalization","vBMergerLatin","approximization","assimilations","language","palatalization","previousConsonant","previousVowel","velarFronting","firstLatinSyncope","originalString","commonRomanceVowelChanges","consonants","vowel","vowelQuantityCollapse","syllable","syllables","latinaTransform","a","iberiaTransform","default","iberianChanges","Header","className","CardList","map","change","Card","key","variant","CardContent","Typography","LANGUAGES","WordForm","handleSubmit","handleChange","onSubmit","TextField","value","onChange","id","label","size","NativeSelect","defaultValue","index","toLowerCase","Button","onClick","Tooltip","title","IconButton","aria-label","App","event","target","setState","state","alert","then","preventDefault","this","React","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0e664ab5.chunk.js","sourcesContent":["let changes = [];\r\nlet changed = false;\r\n\r\n// METHODS //\r\n\r\nexport const geminate = (string, c, l) => {\r\n  // 'c' is the consonant to geminate. 'l' is the following liquid which will trigger gemination\r\n  let environment = new RegExp(\"([aeɛiɪoɔuʊyʏ]ː?)(ˈ)?\" + c + l, \"gi\");\r\n  if (environment.test(string)) {\r\n    string = string.replace(environment, \"$1\" + c + \"$2\" + c + l);\r\n    console.log(\r\n      \"Gemination: /V\" + c + l + \"/ > /V\" + c + c + l + \"/: [\" + string + \"]\"\r\n    );\r\n  }\r\n  return string;\r\n};\r\n\r\nexport const nasalAssimilation = (string) => {\r\n  string = string.replace(\r\n    /[mnɲŋ](ˈ)?([ptkbdɡʦʧfsʎɲ])/,\r\n    (match, stress, consonant) => {\r\n      let replacement = \"\";\r\n      if (!stress) stress = \"\";\r\n      switch (consonant) {\r\n        case \"p\":\r\n        case \"b\":\r\n          replacement = \"m\" + stress + consonant;\r\n          break;\r\n        case \"t\":\r\n        case \"d\":\r\n        case \"s\":\r\n        case \"z\":\r\n        case \"ʦ\":\r\n        case \"ʣ\":\r\n        case \"ʧ\":\r\n        case \"ʤ\":\r\n          replacement = \"n\" + stress + consonant;\r\n          break;\r\n        case \"ʎ\":\r\n        case \"ɲ\":\r\n          replacement = \"ɲ\" + stress + consonant;\r\n          break;\r\n        case \"k\":\r\n        case \"ɡ\":\r\n          replacement = \"ŋ\" + stress + consonant;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return replacement;\r\n    }\r\n  );\r\n  return string;\r\n};\r\n\r\nexport const preceedingYodPalatalization = (string, consonant, result) => {\r\n  let environment = new RegExp(\"(?<=[aeɛiɪoɔuʊyʏ]ː?)i(ˈ)?\" + consonant, \"g\");\r\n  if (environment.test(string)) {\r\n    string = string.replace(environment, \"$1\" + result);\r\n  }\r\n  return string;\r\n};\r\n\r\n// CHANGES //\r\n\r\nconst IPAify = (string) => {\r\n  string = string.replace(/c/gi, \"k\");\r\n  string = string.replace(/g/gi, \"ɡ\");\r\n  string = string.replace(/qu(?=[aeiouy])/gi, \"kʷ\");\r\n  string = string.replace(/nɡu(?=[aeiouy])/gi, \"ŋɡʷ\"); // ɡ\r\n  //string = string.replace(/n(?=[kɡ])/g, \"ŋ\");\r\n  string = string.replace(/v/gi, \"w\");\r\n  string = string.replace(/x/gi, \"ks\");\r\n  string = string.replace(/l(?=[ptkbdɡfsmnr]|$|\\s)/g, \"ɫ\"); // ɫ\r\n  string = string.replace(/(?<=(\\s|^))i(?=[aeɛiɪoɔuʊyʏ])/gi, \"j\"); // !!!!!!\r\n  string = string.replace(/(?<=[aeɛiɪoɔuʊyʏ])i(?=[aeɛiɪoɔuʊyʏ])/gi, \"jj\");\r\n  string = string.replace(/:/g, \"ː\");\r\n  if (/([bdɡ])(?=[ptksf])/.test(string)) {\r\n    // Voice assimilation\r\n    string = string.replace(/b(?=[ptksf])/g, \"p\");\r\n    string = string.replace(/d(?=[ptksf])/g, \"t\");\r\n    string = string.replace(/ɡ(?=[ptksf])/g, \"k\");\r\n  }\r\n\r\n  //matching written vowels with their IPA values\r\n  string = string.replace(\r\n    /(ae(?!ː)|oe(?!ː)|au(?!ː)|[aeiouy](?!ː))/gi,\r\n    function replacer(p1) {\r\n      switch (p1) {\r\n        case \"a\":\r\n          p1 = \"a\";\r\n          break;\r\n        case \"e\":\r\n          p1 = \"ɛ\";\r\n          break;\r\n        case \"i\":\r\n          p1 = \"ɪ\";\r\n          break;\r\n        case \"o\":\r\n          p1 = \"ɔ\";\r\n          break;\r\n        case \"u\":\r\n          p1 = \"ʊ\";\r\n          break;\r\n        case \"y\":\r\n          p1 = \"ʏ\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return p1;\r\n    }\r\n  );\r\n\r\n  let mora = new RegExp(\r\n    /(?:(?:(\\s|^)s)?([ptkbdɡf]?(h[lr]?|[hlrʷ])?|[jmnws]))?(ae(?!ː)|au(?!ː)|oe(?!ː)|[aeɛiɪoɔuʊyʏ](?:ː)?)((([ptkbdɡfn]s?)(?=[ptkbdɡfsn]|$)|[lɫmnŋrsj](?![aeɛiɪoɔuʊyʏ])))?/gi\r\n  );\r\n  let moras = string.match(mora);\r\n  console.log(moras);\r\n\r\n  if (moras.length <= 2) {\r\n    // assign stress based on mora weight\r\n    string = string.replace(moras[0], \"ˈ$&\");\r\n  } else if (moras.length > 2) {\r\n    if (\r\n      /[ptkbdɡmnŋlɫrswjh]$/.test(moras[moras.length - 2]) ||\r\n      moras[moras.length - 2].includes(\"ː\") ||\r\n      /(?:ae|au|oe)/.test(moras[moras.length - 2])\r\n    ) {\r\n      moras[moras.length - 2] = moras[moras.length - 2].replace(\r\n        moras[moras.length - 2],\r\n        \"ˈ$&\"\r\n      );\r\n      string = \"\";\r\n      string = string.concat(...moras);\r\n      console.log(string);\r\n      //string = string.replace(moras[moras.length - 2], 'ˈ$&');\r\n    } else {\r\n      moras[moras.length - 3] = moras[moras.length - 3].replace(\r\n        moras[moras.length - 3],\r\n        \"ˈ$&\"\r\n      );\r\n      string = \"\";\r\n      string = string.concat(...moras);\r\n      console.log(string);\r\n      //string = string.replace(moras[moras.length - 3], 'ˈ$&')\r\n    }\r\n  }\r\n  string = string.replace(\r\n    /([aeɛiɪoɔuʊyʏ])(ː)?[nm](ˈ)?(?=[sf]|$|\\s)/gi,\r\n    \"$1̃$2$3\"\r\n  );\r\n  string = nasalAssimilation(string);\r\n  return changes.push({\r\n    name: \"IPA form\",\r\n    word: string,\r\n    description: \"This is the word transcribed in IPA\",\r\n  });\r\n};\r\n\r\nconst hLoss = (string) => {\r\n  // 1st Century BC, according to Loporcaro\r\n  if (string.includes(\"h\")) {\r\n    string = string.replace(/h/gi, \"\");\r\n\r\n    return changes.push({\r\n      name: \"Loss of /h/\",\r\n      word: string,\r\n      description: \"/h/ disappeared in all contexts\",\r\n    });\r\n  }\r\n};\r\n\r\nconst denasalization = (string) => {\r\n  if (string.includes(\"̃\")) {\r\n    string = string.replace(/̃/g, \"\");\r\n\r\n    return changes.push({\r\n      name: \"Denasalization\",\r\n      word: string,\r\n      description:\r\n        \"Nasalized vowels from sequences like /Vnf/, /Vns/ or /Vm#/ become denasalized\",\r\n    });\r\n  }\r\n};\r\n\r\nconst vBMergerLatin = (string) => {\r\n  if (\r\n    string.includes(\"w\") ||\r\n    /(?<=[aeɛiɪoɔuʊyʏrl]ː?ˈ?)b(?=[aeɛiɪoɔuʊyʏ])/g.test(string)\r\n  ) {\r\n    string = string.replace(/(\\s|^|ˈ|[aeɛiɪoɔuʊyʏːnw]ː?)w/g, \"$1β\");\r\n    string = string.replace(\r\n      /(?<=[aeɛiɪoɔuʊyʏrl]ː?ˈ?)b(?=[aeɛiɪoɔuʊyʏrl])/g,\r\n      \"β\"\r\n    );\r\n    return changes.push({\r\n      name: \"Merger of /w/ and intervocalic /b/\",\r\n      word: string,\r\n      description:\r\n        \"/w/ comes to be pronounced as /β/, and so does /b/ in intervocalic position word-internally\",\r\n    });\r\n  }\r\n};\r\n\r\nconst approximization = (string) => {\r\n  changed = false;\r\n  if (\r\n    /[eɛiɪ]ˈ?[aeɛiɪoɔuʊyʏ]/g.test(string) ||\r\n    /(ˈ)?([ptkbdɡf]?[hlrʷ]?|[jmnws])?[eɛiɪ]([aeɛiɪoɔuʊyʏ])/.test(string)\r\n  ) {\r\n    string = string.replace(\r\n      /([ptkbdɡf]?[hlrʷ]?|[jmnws])?[eɛiɪ](ˈ)?([aeɛiɪoɔuʊyʏ])/g,\r\n      \"$2$1j$3\"\r\n    );\r\n    string = string.replace(\r\n      /(ˈ)?([ptkbdɡf]?[hlrʷ]?|[jmnws])?[eɛiɪ](?=[aeɛiɪoɔuʊyʏ])/g,\r\n      \"$1$2j\"\r\n    );\r\n    changed = true;\r\n  }\r\n  if (/[oɔuʊ]ˈ?[aeɛiɪoɔuʊyʏ]/g.test(string)) {\r\n    string = string.replace(\r\n      /([ptkbdɡf]?[hlrʷ]?|[jmnws])?[oɔuʊ](ˈ)?([aeɛiɪoɔuʊyʏ])/g,\r\n      \"$2$1w$3\"\r\n    );\r\n    changed = true;\r\n  }\r\n  if (changed) {\r\n    return changes.push({\r\n      name: \"Approximization of unstressed vowels\",\r\n      word: string,\r\n      description:\r\n        \"All vowels except for /a/ become approximants /j/ or /w/ if they're unstressed and before another vowel\",\r\n    });\r\n  }\r\n};\r\n\r\nconst assimilations = (string, language) => {\r\n  let changed = false;\r\n  let description = \"\";\r\n  if (/pˈ?[kts]/.test(string)) {\r\n    // First attested from 19AD accroding to Lloyd\r\n    string = string.replace(/p(ˈ)?([kts])/, \"$2$1$2\");\r\n    changed = true;\r\n    description = \"/p/ became assimilated before /k, t, s/. \";\r\n  }\r\n  if (/rˈ?s/.test(string)) {\r\n    // First attestations from Plautus, so this started around 200BC according to Lloyd\r\n    string = string.replace(/r(ˈ)?s/gi, \"s$1s\");\r\n    changed = true;\r\n    description = description + \"/rs/ became assimilated into /ss/. \";\r\n  }\r\n  if (/mˈ?n/.test(string)) {\r\n    switch (language) {\r\n      case \"spanish\":\r\n      case \"italian\":\r\n        string = string.replace(/m(ˈ)?n/gi, \"n$1n\");\r\n        changed = true;\r\n        description = description + \"/mn/ became assimilated into /nn/. \";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  if (/mp?ˈ?[tkdɡsf]/.test(string)) {\r\n    string = string.replace(/mp?(ˈ)?([tdsf])/, \"n$1$2\");\r\n    string = string.replace(/mp?(ˈ)?([kɡ])/, \"ŋ$1$2\");\r\n    changed = true;\r\n    description =\r\n      description +\r\n      \"/m/ became assimilated to the point of articulation of a following consonant. \";\r\n  }\r\n  if (/mˈ?b/.test(string) && language === \"spanish\") {\r\n    string = string.replace(/m(ˈ)?b(?=[aeɛiɪoɔuʊyʏ])/gi, \"m$1m\");\r\n    changed = true;\r\n    description =\r\n      description +\r\n      \"/mb/ often became assimilated into /mm/ in Spanish, though not always. \";\r\n  }\r\n  if (/ksˈ?[ptkbdɡmnlrfs]/.test(string)) {\r\n    string = string.replace(/ks(?=ˈ?[ptkbdɡmnlrfs])/gi, \"s\");\r\n    changed = true;\r\n    description = description + \"/ks/ before a consonant became simplified /s/\";\r\n  }\r\n  if (/auˈ?ɡ[uʊ]/g.test(string)) {\r\n    string = string.replace(/au(ˈ)?ɡ([uʊ])/g, \"a$1ɡ$2\");\r\n    changed = true;\r\n    description = description + \"/auɡV/ typically became simplified into /aɡV/\";\r\n  }\r\n\r\n  if (changed) {\r\n    changes.push({\r\n      name: \"Consonant assimilation and simplifications\",\r\n      word: string,\r\n      description: description,\r\n    });\r\n  }\r\n};\r\n\r\nconst palatalization = (string, language) => {\r\n  changed = false;\r\n  let description = \"\";\r\n  if (/[tɡdln]j/.test(string)) {\r\n    if (/(?<=[aeɛiɪoɔuʊyʏ]ˈ?)[ɡd]j/.test(string)) {\r\n      // Around 1st Century AD, according to Castellani (1965) and Loporcaro (2011)\r\n      string = string.replace(/(?<=(\\s|^))(ˈ)?[ɡd]j(?=[aeɛiɪoɔuʊyʏ])/gi, \"$1j\");\r\n      string = string.replace(\r\n        /(?<=[aeɛiɪoɔuʊyʏ]ː?ˈ?)[ɡd]j(?=[aeɛiɪoɔuʊyʏ])/g,\r\n        \"jj\"\r\n      );\r\n      description =\r\n        \"/ɡj/ and /dj/ became simplified into /j/ or a similar sound. \";\r\n    }\r\n\r\n    if (/(?<=[slrn]ˈ?)[ɡd]j/.test(string) && language === \"spanish\") {\r\n      string = string.replace(/(?<=[slrn]ˈ?)[ɡd]j/gi, \"ʦj\");\r\n\r\n      description =\r\n        description + \"/dj/ and /gj/ after a consonant becomes /ʦj/ in Spanish\";\r\n    }\r\n\r\n    if (string.includes(\"tj\")) {\r\n      // As early as 2nd century AD, according to Loporcaro. 1st century according to Penny\r\n      string = string.replace(\r\n        /([ptks])?(ˈ)?tj/g,\r\n        (match, previousConsonant, stress) => {\r\n          if (!stress) stress = \"\";\r\n          if (previousConsonant) {\r\n            return \"ʦ\" + stress + \"ʦj\";\r\n          } else {\r\n            return stress + \"ʦj\";\r\n          }\r\n        }\r\n      );\r\n      if (language === \"italian\") {\r\n        string = geminate(string, \"ʦ\", \"j\");\r\n      }\r\n      description = description + \"/tj/ became palatalized into /ʦj/. \";\r\n    }\r\n\r\n    if (string.includes(\"lj\")) {\r\n      string = string.replace(\r\n        /(l)?(ˈ)?lj/g,\r\n        (match, previousConsonant, stress) => {\r\n          if (!stress) stress = \"\";\r\n          if (previousConsonant) {\r\n            return \"ʎ\" + stress + \"ʎj\";\r\n          } else {\r\n            return stress + \"ʎj\";\r\n          }\r\n        }\r\n      );\r\n      string = geminate(string, \"ʎ\", \"j\");\r\n      description = description + \"/lj/ became palatalized into /ʎj/. \";\r\n    }\r\n\r\n    if (string.includes(\"nj\")) {\r\n      string = string.replace(\r\n        /(n)?(ˈ)?nj/g,\r\n        (match, previousConsonant, stress) => {\r\n          if (!stress) stress = \"\";\r\n          if (previousConsonant) {\r\n            return \"ɲ\" + stress + \"ɲj\";\r\n          } else {\r\n            return stress + \"ɲj\";\r\n          }\r\n        }\r\n      );\r\n      string = geminate(string, \"ɲ\", \"j\");\r\n      description = description + \"/nj/ became palatalized into /ɲj/. \";\r\n    }\r\n\r\n    string = nasalAssimilation(string);\r\n\r\n    changes.push({\r\n      name: \"Palatalization before /j/\",\r\n      word: string,\r\n      description: description, //\"Many consonants become palatalized when before /j/\",\r\n    });\r\n  }\r\n\r\n  if (/kʷ?j/.test(string)) {\r\n    string = string.replace(\r\n      /([aeɛiɪoɔuʊyʏ])?([ptks])?(ˈ)?kʷ?j/g,\r\n      (match, previousVowel, previousConsonant, stress) => {\r\n        if (!previousVowel) previousVowel = \"\";\r\n        if (!stress) stress = \"\";\r\n        if (language === \"spanish\") {\r\n          description =\r\n            \"Palatalization of /k/ ([k] > [c] > [ʧ] > [ʦ]) before a yod\";\r\n          if (previousConsonant || previousVowel) {\r\n            return previousVowel + \"ʦ\" + stress + \"ʦ\";\r\n          } else {\r\n            return stress + \"ʦ\";\r\n          }\r\n        }\r\n        if (language === \"italian\") {\r\n          description = \"Palatalization of /k/ ([k] > [c] > [ʧ]) before a yod\";\r\n          if (previousConsonant) {\r\n            return \"ʧ\" + stress + \"ʧ\";\r\n          } else {\r\n            return stress + \"ʧ\";\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    string = nasalAssimilation(string);\r\n    // As early as 2nd Century AD, according to Loporcaro. This change may have occurred after the 'affrication' of /tj/\r\n    changes.push({\r\n      name: \"Palatalization of /kj/\",\r\n      word: string,\r\n      description: description,\r\n    });\r\n  }\r\n\r\n  if (/[ʧʦʎɲ]j/.test(string)) {\r\n    string = string.replace(/([ʧʦʎɲ])j/g, \"$1\");\r\n    changes.push({\r\n      name: \"Absorption of /j/ after a palatalized consonant\",\r\n      word: string,\r\n      description:\r\n        \"After a palatalized consonant, /j/ was almost always absorbed completely\",\r\n    });\r\n  }\r\n};\r\n\r\nconst velarFronting = (string, language) => {\r\n  let description = \"\";\r\n  if (/ɡ[eɛiɪ]/.test(string)) {\r\n    // 1st to 2nd century AD (Loporcaro)\r\n    // The results for this group across Romance languages are really complicated.\r\n    // For now we use the final results depending on the target language,\r\n    // even though that might be historically unacurate\r\n    if (language === \"spanish\") {\r\n      string = string.replace(/(?<=[aeɛiɪoɔuʊyʏ]ˈ?|^ˈ?)ɡ(?=[eɛiɪ])/g, \"j\");\r\n      string = string.replace(/(?<=[rnŋ]ˈ?)ɡ(?=[eɛiɪ])/g, \"ʤ\");\r\n      description =\r\n        \"/ɡ/ after vowels and before front vowels was palatalized into /j/, but /ʤ/ after consonants\";\r\n    } else {\r\n      string = string.replace(/ɡ(?=[eɛiɪ])/g, \"ʤ\");\r\n      description = \"/ɡ/ before front vowels was palatalized into /ʤ/\";\r\n    }\r\n\r\n    string = nasalAssimilation(string);\r\n    changes.push({\r\n      name: \"Palatalization of /ɡ/ before a front vowel\",\r\n      word: string,\r\n      description: description,\r\n    });\r\n  }\r\n  if (/k[eɛiɪ]/.test(string)) {\r\n    // After fall of the Western Roman Empire, so around 500 AD (Loporcaro)\r\n    string = string.replace(\r\n      /([ptks])?(ˈ)?k(?=[eɛiɪ])/g,\r\n      (match, previousConsonant, stress) => {\r\n        if (!stress) stress = \"\";\r\n        if (language === \"spanish\") {\r\n          description =\r\n            \"Palatalization of /k/ ([k] > [c] > [ʧ] > [ʦ]) before a front vowel\";\r\n          if (previousConsonant) {\r\n            return \"ʦ\" + stress + \"ʦ\";\r\n          } else {\r\n            return stress + \"ʦ\";\r\n          }\r\n        }\r\n        if (language === \"italian\") {\r\n          description =\r\n            \"Palatalization of /k/ ([k] > [c] > [ʧ]) before a front vowel\";\r\n          if (previousConsonant) {\r\n            return \"ʧ\" + stress + \"ʧ\";\r\n          } else {\r\n            return stress + \"ʧ\";\r\n          }\r\n        }\r\n      }\r\n    );\r\n    string = nasalAssimilation(string);\r\n    changes.push({\r\n      name: \"Palatalization of /k/ before a front vowel\",\r\n      word: string,\r\n      description: description,\r\n    });\r\n  }\r\n};\r\n\r\nconst sCProsthesis = (string) => {\r\n  // Around second century AD according to Lloyd\r\n  if (/(?<=\\s|^)(ˈ)?s(?=[ptkbdgfmnrl])/.test(string)) {\r\n    string = string.replace(/(?<=\\s|^)(ˈ)?s(?=[ptkbdgfmnrl])/, \"ɪs$1\");\r\n\r\n    changes.push({\r\n      name: \"Prosthesis of S in /sC/ with /i/\",\r\n      word: string,\r\n      description:\r\n        \"/sC/ onsets at the beginning of a word routinely became /isC/\",\r\n    });\r\n  }\r\n};\r\n\r\nconst firstLatinSyncope = (string) => {\r\n  const originalString = string;\r\n  // Words affected by it at least by the 5th century\r\n  if (\r\n    /(?<!ˈ|^)[ptkbdɡf][eɛiɪoɔuʊyʏ][lr]/.test(string) ||\r\n    /(?<!ˈ)s[eɛiɪuʊ]ː?t/\r\n  ) {\r\n    string = string.replace(\r\n      /(?<!ˈ|^)([ptkbdɡfβ])[eɛiɪoɔuʊyʏ](ˈ)?([lr])/gi,\r\n      \"$2$1$3\"\r\n    );\r\n    string = string.replace(\"βl\", \"bl\");\r\n    string = string.replace(/(?<!ˈ)s[eɛiɪuʊ]ː?(ˈ)?t/gi, \"s$1t\");\r\n    string = string.replace(\"tl\", \"kl\");\r\n    string = string.replace(\"dl\", \"dr\");\r\n  }\r\n  if (originalString !== string) {\r\n    changes.push({\r\n      name: \"Early vowel syncope\",\r\n      word: string,\r\n      description:\r\n        \"Vowels (except for /a/) could be deleted in certain contexts involving liquid consonants, such as /kul/, mainly in medial syllables\",\r\n    });\r\n  }\r\n};\r\n\r\nconst commonRomanceVowelChanges = (string) => {\r\n  /* First traces can be found from 1st Century AD onwards, according to Loporcaro. \r\n  ('tempestatebus' for 'tempestatibus' in L. Cornelius Scipio's grave in 259BC).\r\n  By the time the Appendix Probi was written, short /i, u/ were likely merged with /e, o/\r\n  /ae/ and /oe/ might have been shortened in the 1st century AD according to Herman.\r\n  Changes to the phonetic value of the vowel according to stress didn't necessarily happen\r\n  at the same time as these changes (which are also an abstraction, they occurred at different points in time)*/\r\n  string = string.replace(\r\n    /(ˈ)?([ptkbdɡfβ]?[lrjʷ]?|[hjmnwsʦʧʤʎɲ])?(ae(?!ː)|oe(?!ː)|[aeɛiɪoɔuʊyʏ])/gi,\r\n    function replacer(\r\n      match,\r\n      stress,\r\n      consonants,\r\n      vowel\r\n    ) /* au not included because it monophthongized later*/ {\r\n      if (stress) {\r\n        switch (vowel) {\r\n          case \"ae\":\r\n            vowel = \"ɛː\";\r\n            break;\r\n          case \"oe\":\r\n            vowel = \"eː\";\r\n            break;\r\n          case \"ɪ\":\r\n            vowel = \"e\";\r\n            break;\r\n          case \"ʊ\":\r\n            vowel = \"o\";\r\n            break;\r\n          case \"y\":\r\n            vowel = \"i\";\r\n            break;\r\n          case \"ʏ\":\r\n            vowel = \"e\";\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        switch (vowel) {\r\n          case \"ae\":\r\n            vowel = \"e\";\r\n            break;\r\n          case \"oe\":\r\n            vowel = \"e\";\r\n            break;\r\n          case \"ɛ\":\r\n            vowel = \"e\";\r\n            break;\r\n          case \"ɪ\":\r\n            vowel = \"e\";\r\n            break;\r\n          case \"ɔ\":\r\n            vowel = \"o\";\r\n            break;\r\n          case \"ʊ\":\r\n            vowel = \"o\";\r\n            break;\r\n          case \"y\":\r\n            vowel = \"i\";\r\n            break;\r\n          case \"ʏ\":\r\n            vowel = \"e\";\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (!consonants) consonants = \"\";\r\n      if (!stress) stress = \"\"; // don't throw undefineds if there aren't consonants or a stress mark before the vowel or diphthong\r\n      return stress + consonants + vowel;\r\n    }\r\n  );\r\n  return changes.push({\r\n    name: \"Early Romance vowel changes\",\r\n    word: string,\r\n    description:\r\n      \"Several changes occur to the vowel system, some of them depending on the language\",\r\n  });\r\n};\r\n\r\nconst vowelQuantityCollapse = (string) => {\r\n  // Was at work at least from the early 5th century, according to Loporcaro\r\n  // let syllable = new RegExp(\r\n  //   /(ˈ)?([ptkbdɡfβɟ]?([lr]j|[hlrjwʷ])?|[mnlrsʦʧʎɲ]?[jw]?)?([aeɛiɪoɔuʊyʏ])(ː)?([ptkbdɡfβɟ]?[s]?(?![aeɛiɪoɔuʊyʏhrljwʷ])|[rlmnɫŋʦʧʎɲ][sk]?(?![aeɛiɪoɔuʊyʏjw]))?/gi\r\n  // );\r\n\r\n  let syllable = new RegExp(\r\n    /(ˈ)?([ptkbdɡβf]?([lrʷ])?j?|[mnwsʦʧʤʎɲ]j?)?(ae(?!ː)|au(?!ː)|oe(?!ː)|[aeɛiɪoɔuʊyʏ](?:ː)?)((([ptkbdɡfn]s?)(?=ˈ?[ptkbdɡfsʦʧnm]|$)|[rlmnɫŋʦʧʤʎɲs](?![aeɛiɪoɔuʊyʏjw])|j(?=ˈ?j)))?/gi\r\n  );\r\n  const syllables = string.match(syllable); // ɫŋʦʧʎɲ\r\n  console.log(syllables);\r\n  string = \"\";\r\n  for (let syllable of syllables) {\r\n    if (syllable.includes(\"ˈ\") && /[aeɛiɪoɔuʊyʏ](ː)?$/.test(syllable)) {\r\n      // check if syllable is open and stressed to apply OSL\r\n      if (!syllable.includes(\"ː\")) syllable = syllable.concat(\"ː\");\r\n    } else {\r\n      syllable = syllable.replace(\"ː\", \"\");\r\n    }\r\n    string = string.concat(syllable);\r\n  }\r\n  return changes.push({\r\n    name: \"Vowel quantity collapse and open syllable lenghtening\",\r\n    word: string,\r\n    description:\r\n      \"Vowel quantity collapse and open syllable lenghtening. Long vowels became shortened except in stressed open syllables. Stressed open syllables were in turn lengthened even if they were short.\",\r\n  });\r\n};\r\n\r\nconst latinaTransform = async (word, language) => {\r\n  changes = [];\r\n  IPAify(word);\r\n  hLoss(changes[changes.length - 1].word);\r\n  denasalization(changes[changes.length - 1].word);\r\n  vBMergerLatin(changes[changes.length - 1].word);\r\n  approximization(changes[changes.length - 1].word);\r\n  assimilations(changes[changes.length - 1].word, language);\r\n  palatalization(changes[changes.length - 1].word, language);\r\n  velarFronting(changes[changes.length - 1].word, language);\r\n  sCProsthesis(changes[changes.length - 1].word);\r\n  firstLatinSyncope(changes[changes.length - 1].word);\r\n  commonRomanceVowelChanges(changes[changes.length - 1].word);\r\n  vowelQuantityCollapse(changes[changes.length - 1].word);\r\n  if (language === \"spanish\") {\r\n    let { default: iberiaTransform } = await import(\"./iberia\");\r\n    let iberianChanges = iberiaTransform(changes[changes.length - 1], language);\r\n    console.log(iberianChanges);\r\n\r\n    changes = changes.concat(iberianChanges);\r\n  }\r\n  console.log(changes);\r\n  return changes;\r\n};\r\n\r\nexport default latinaTransform;","import React from 'react'\r\n\r\nimport './header.styles.css'\r\n\r\nconst Header = () => (\r\n    <header className='header'>\r\n        <h2>LATINA</h2>\r\n    </header>\r\n)\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography } from \"@material-ui/core/\";\r\n\r\nimport \"./card-list.styles.scss\";\r\n\r\nconst CardList = ({ changes }) => (\r\n  <div className=\"card-list\">\r\n    {changes.map((change) =>  (\r\n      <Card key={change.name} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h5\">{change.name}</Typography>\r\n          <Typography variant=\"h6\">[{change.word}]</Typography>\r\n          <Typography variant=\"subtitle1\">{change.description}</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default CardList;\r\n","const LANGUAGES = ['Spanish', 'Italian']\r\n\r\nexport default LANGUAGES","import React from \"react\";\r\n\r\nimport LANGUAGES from \"../../languages\";\r\n\r\nimport {\r\n  TextField,\r\n  NativeSelect,\r\n  Button,\r\n  Tooltip,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport HelpOutlineRoundedIcon from \"@material-ui/icons/HelpOutlineRounded\";\r\nimport \"./word-form.styles.css\";\r\n\r\nconst WordForm = ({ word, handleSubmit, handleChange }) => (\r\n  <form className=\"word-form\" onSubmit={handleSubmit}>\r\n    <TextField\r\n      variant=\"outlined\"\r\n      value={word}\r\n      onChange={handleChange}\r\n      id=\"word\"\r\n      name=\"word\"\r\n      label=\"Word to transform\"\r\n      size=\"small\"\r\n    />\r\n    <NativeSelect defaultValue=\"\" onChange={handleChange} name=\"language\">\r\n      <option value=\"\">Target language</option>\r\n      {LANGUAGES.map((language, index) => (\r\n        <option key={index} value={language.toLowerCase()}>\r\n          {language}\r\n        </option>\r\n      ))}\r\n    </NativeSelect>\r\n\r\n    <Button variant=\"contained\" size=\"small\" onClick={handleSubmit}>\r\n      Transform\r\n    </Button>\r\n\r\n    <Tooltip title=\"Type ':' after a vowel to make it long. While Latina can transform verb infinives and output regular outcomes, it isn't guaranteed to work correctly because of changes like syncope not affecting verbs the same way as other types of words\">\r\n      <IconButton aria-label=\"help\">\r\n        <HelpOutlineRoundedIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  </form>\r\n);\r\n\r\nexport default WordForm;\r\n","import React from \"react\";\n\n//import InputBox from \"./components/input-box/input-box.component\";\n//import Select from \"./components/select/select.component\";\nimport Header from \"./components/header/header.component\";\nimport CardList from \"./components/card-list/card-list.component\";\n\nimport latinaTransform from \"./latina\";\n\nimport \"./App.css\";\nimport WordForm from \"./components/word-form/word-form.component\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      word: \"\",\n      language: \"\",\n      changes: [],\n    };\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    const { word, language } = this.state;\n    if (/[^a-z:]|^:|[^aeiouy]:/.test(word)) {\n      alert(\n        \"The word you input can only contain symbols and colons. Colons can only appear after a vowel letter (a, e, i, o, u, y)\"\n      );\n    } else if (!/[aeiou]/.test(word)) {\n      alert(\"The word must contain valid syllables\");\n    } else if (!word || !language) {\n      alert(\"You must input a word and select a language first\");\n    } else {\n      latinaTransform(word, language).then(changes => this.setState({changes: changes}))\n      // if (language === 'spanish') {\n      //   this.setState({changes: changes.push(iberiaTransform(changes[changes.length - 1].word, language))})\n      // }\n    }\n\n    //Gotta write the code to make the changes array receive data every time one of the changes in the spanish file fires\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <WordForm\n          word={this.state.word}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n        <CardList changes={this.state.changes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}